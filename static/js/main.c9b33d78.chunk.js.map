{"version":3,"sources":["MapChart.jsx","App.jsx","serviceWorker.js","index.js"],"names":["memo","setTooltipContent","data","data-tip","projection","projectionConfig","rotate","scale","geography","geographies","map","geo","key","rsmKey","onMouseEnter","name","properties","student","find","city","index","slice","toLocaleString","teacher","parent","others","onMouseLeave","style","default","fill","outline","hover","pressed","RADIAN","Math","PI","useStyles","makeStyles","theme","root","flexGrow","margin","marginLeft","paper","padding","spacing","maxWidth","colors4","colors20","App","classes","useState","content","setContent","WAUWeekByWeek","setWAUWeekByWeek","lastWeekWAUByCity","setLastWeekWAUByCity","regUserCategory","setRegUserCategory","contentType","setContentType","lastWeekWAUByHour","setLastWeekWAUByHour","contentUsageByMonth","setContentUsageByMonth","regUserByMonth","setRegUserByMonth","regUserByCity","setRegUserByCity","isLoading","setLoading","useEffect","jsonPairs","fetchJSON","filename","a","fetch","then","response","ok","json","catch","err","console","error","finally","preState","Object","keys","forEach","renderInnerLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","user_role","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","renderOuterLabel","useCallback","entry","city_total_student_cnt","reduce","total","obj","count","values","filter","val","length","className","Typography","variant","paragraph","color","week","Grid","container","item","xs","Paper","width","height","type","dataKey","stroke","dot","strokeDasharray","vertical","tickFormatter","tickItem","substring","verticalAlign","align","exercise","quiz","video","nameKey","labelLine","label","value","position","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c9b33d78.chunk.js","sourcesContent":["import React, { memo } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl = \"https://raw.githubusercontent.com/junyiacademy/dashboard/master/src/JSON/counties.json\";\r\n\r\nconst MapChart = ({ setTooltipContent, data }) => {\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip=\"\" projection=\"geoAzimuthalEqualArea\" projectionConfig={{ rotate: [239, -23.5, 0], scale: 8000 }}>\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                geography={geo}\r\n                onMouseEnter={() => {\r\n                  const { name } = geo.properties;\r\n                  const student = data.find((city) => (city.index) === name.slice(0,2))?.student.toLocaleString('en');\r\n                  const teacher = data.find((city) => city.index === name.slice(0,2))?.teacher.toLocaleString('en');\r\n                  const parent = data.find((city) => city.index === name.slice(0,2))?.parent.toLocaleString('en');\r\n                  const others = data.find((city) => city.index === name.slice(0,2))?.others.toLocaleString('en');\r\n                  setTooltipContent(`${name.slice(0,2)}: 學生 ${student}, 老師 ${teacher}, 家長 ${parent}, 其他 ${others}`);\r\n                }}\r\n                onMouseLeave={() => {\r\n                  setTooltipContent(\"\");\r\n                }}\r\n                style={{\r\n                  default: {\r\n                    fill: \"#3399FF\",\r\n                    outline: \"#none\"\r\n                  },\r\n                  hover: {\r\n                    fill: \"#F53\",\r\n                    outline: \"none\"\r\n                  },\r\n                  pressed: {\r\n                    fill: \"#E42\",\r\n                    outline: \"none\"\r\n                  }\r\n                }}\r\n              />\r\n            ))\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Legend, Label, Cell, PieChart, Pie, BarChart, Bar, LineChart, Line, ResponsiveContainer, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MapChart from \"./MapChart\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst AzureBlobURL = '/dashboard-json/';\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 50,\r\n    marginLeft: 50,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: '100%',\r\n  },\r\n}));\r\n\r\nconst colors4 = ['#880e4f', '#311b92', '#0d47a1', '#006064',];\r\n\r\nconst colors20 = [\r\n  '#ff7961', '#ff6090', '#d05ce3', '#9a67ea',\r\n  '#757de8', '#6ec6ff', '#67daff', '#62efff',\r\n  '#52c7b8', '#80e27e', '#bef67a', '#629749',\r\n  '#b4a647', '#ffb04c', '#ff833a', '#ff8a50',\r\n  '#a98274', '#cfcfcf', '#8eacbb', '#484848',\r\n];\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [content, setContent] = useState(\"\");\r\n  const [WAUWeekByWeek, setWAUWeekByWeek] = useState([]);\r\n  const [lastWeekWAUByCity, setLastWeekWAUByCity] = useState([]);\r\n  const [regUserCategory, setRegUserCategory] = useState([]);\r\n  const [contentType, setContentType] = useState([]);\r\n  const [lastWeekWAUByHour, setLastWeekWAUByHour] = useState([]);\r\n  const [contentUsageByMonth, setContentUsageByMonth] = useState([]);\r\n  const [regUserByMonth, setRegUserByMonth] = useState([]);\r\n  const [regUserByCity, setRegUserByCity] = useState([]);\r\n  const [isLoading, setLoading] = useState({\r\n    'WAU_week_by_week.json': true,\r\n    'last_week_WAU_by_city.json': true,\r\n    'reg_user_category.json': true,\r\n    'content_type.json': true,\r\n    'last_week_WAU_by_hour.json': true,\r\n    'content_usage_by_month.json': true,\r\n    'reg_user_by_month.json': true,\r\n    'reg_user_by_city.json': true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const jsonPairs = {\r\n      'WAU_week_by_week.json': setWAUWeekByWeek,\r\n      'last_week_WAU_by_city.json': setLastWeekWAUByCity,\r\n      'reg_user_category.json': setRegUserCategory,\r\n      'content_type.json': setContentType,\r\n      'last_week_WAU_by_hour.json': setLastWeekWAUByHour,\r\n      'content_usage_by_month.json': setContentUsageByMonth,\r\n      'reg_user_by_month.json': setRegUserByMonth,\r\n      'reg_user_by_city.json': setRegUserByCity,\r\n    }\r\n\r\n    const fetchJSON = async(filename) => {\r\n      await fetch(AzureBlobURL + filename).then(\r\n        response => {if(response.ok) return response.json()}).then(\r\n          json => jsonPairs[filename](json)).catch(\r\n            err => console.error(err)).finally(() => {\r\n              setLoading((preState) => ({...preState, [filename]: false}));\r\n            })\r\n    };\r\n\r\n    Object.keys(jsonPairs).forEach(filename => fetchJSON(filename));\r\n  }, []);\r\n\r\n  const renderInnerLabel = ({cx, cy, midAngle, innerRadius, outerRadius, percent, user_role,}) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN) - 15;\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n    return (\r\n      <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n        {`${user_role}：${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  const renderOuterLabel = useCallback(entry => {\r\n    if (entry.city_total_student_cnt > 10000) {\r\n      return entry.city + \"：\" + (entry.city_total_student_cnt * 100 / regUserCategory.reduce((total, obj) => total + obj.count, 0)).toFixed(2) + \"%\";\r\n    }\r\n      else{ return; }  \r\n  }, [regUserCategory],);\r\n\r\n  if (Object.values(isLoading).filter((val) => val === true).length > 0 ) \r\n  {\r\n    return (<div><p>Loading...</p></div>)\r\n  }\r\n  else \r\n  {    \r\n    return (\r\n      <div className={classes.root}>\r\n\r\n        <Typography variant=\"h4\" paragraph={true}>\r\n          均一教育平台網站公開數據\r\n        </Typography>\r\n\r\n        <Typography variant=\"h5\" paragraph={true} color=\"secondary\">\r\n          上週數據({ WAUWeekByWeek.length > 1 ? WAUWeekByWeek[WAUWeekByWeek.length - 1].week : []})\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              上週24小時各時段平均活躍人數\r\n            </Typography>\r\n            <Paper className={classes.paper}>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <LineChart data={lastWeekWAUByHour}>\r\n                  <Line name=\"平均活躍人數\" type=\"monotone\" dataKey=\"avg_user_cnt\" stroke={colors20[0]} dot={true}/>\r\n                  <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                  <XAxis dataKey=\"hour\"/>\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              上週24小時各時段平均使用時間(分鐘)\r\n            </Typography>\r\n            <Paper className={classes.paper}>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <LineChart data={lastWeekWAUByHour}>\r\n                  <Line name=\"平均使用時間(分鐘)\" type=\"monotone\" dataKey=\"avg_time_minute\" stroke={colors20[2]} dot={true}/>\r\n                  <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                  <XAxis dataKey=\"hour\"/>\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </Paper>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Grid container spacing={4}>\r\n\r\n          <Grid item xs>\r\n            <Typography variant=\"h6\">\r\n              上週各縣市活躍人數\r\n            </Typography>\r\n            <Paper className={classes.paper}>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <BarChart data={lastWeekWAUByCity}>\r\n                  <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                  <XAxis dataKey=\"city\"/>\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  {/* <Legend verticalAlign=\"top\" height={36}/> */}\r\n                  <Bar name=\"上週各縣市活躍人數\" dataKey=\"active_student_cnt\" fill={colors20[4]}/>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </Paper>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <div >&zwj;</div>\r\n        <div >&zwj;</div>\r\n\r\n        <Typography variant=\"h5\" paragraph={true}  color=\"secondary\">\r\n            長期數據 (2012-10 ~ { WAUWeekByWeek.length > 1 ? WAUWeekByWeek[WAUWeekByWeek.length-1].week : [] })\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          <Grid item xs>\r\n            <Typography variant=\"h6\">\r\n              每週活躍使用者人數\r\n            </Typography>\r\n            <Paper className={classes.paper}>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <LineChart data={WAUWeekByWeek}>\r\n                  <Line name=\"週活躍人數\" type=\"monotone\" dataKey=\"unique_user_cnt\" stroke={colors20[8]} dot={false}/>\r\n                  <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                  <XAxis dataKey=\"week\" tickFormatter={(tickItem) => tickItem.substring(0, 7)}/>\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  {/* <Legend verticalAlign=\"top\" height={36}/> */}\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4}>\r\n          <Grid item xs>\r\n            <Typography variant=\"h6\">\r\n              每月內容使用人次\r\n            </Typography>\r\n            <Paper className={classes.paper}>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <LineChart data={contentUsageByMonth}>\r\n                  <Line name=\"影片使用人次\" type=\"monotone\" dataKey=\"video_cnt\" stroke={colors20[11]} dot={false}/>\r\n                  <Line name=\"習題使用人次\" type=\"monotone\" dataKey=\"exercise_cnt\" stroke={colors20[12]} dot={false}/>\r\n                  <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                  <XAxis dataKey=\"year_month\"/>\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Legend verticalAlign=\"top\" height={36}/>\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4}>\r\n\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              各縣市不同身分註冊使用者統計\r\n            </Typography>\r\n            <Paper className={classes.paper}>\r\n              <MapChart setTooltipContent={setContent} data={regUserByCity}/>\r\n              <ReactTooltip>{content}</ReactTooltip>\r\n            </Paper>\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n\r\n            <Typography variant=\"h6\">\r\n              網站內容統計\r\n            </Typography>\r\n\r\n            <Grid container spacing={4}>\r\n              <Grid item xs>\r\n                <Paper className={classes.paper}>\r\n                  <Typography variant=\"h4\" paragraph={true} align=\"center\">\r\n                    {contentType.length > 0 ? contentType[0].exercise.toLocaleString('en'): 'Loading...'}\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" paragraph={true} align=\"center\">\r\n                    知識點個數\r\n                  </Typography>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={4}>\r\n              <Grid item xs>\r\n                <Paper className={classes.paper}>\r\n                  <Typography variant=\"h4\" paragraph={true}  align=\"center\">\r\n                    {contentType.length > 0 ? contentType[0].quiz.toLocaleString('en'): 'Loading...'}\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" paragraph={true} align=\"center\">\r\n                    練習題總數\r\n                  </Typography>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs>\r\n                <Paper className={classes.paper}>\r\n                  <Typography variant=\"h4\" paragraph={true} align=\"center\">\r\n                    {contentType.length > 0 ? contentType[0].video.toLocaleString('en'): 'Loading...'}\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" paragraph={true} align=\"center\">\r\n                    影片總數\r\n                  </Typography>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Grid container spacing={4}>\r\n          <Grid item xs>\r\n            <Typography variant=\"h6\">\r\n              每月新增註冊人數\r\n            </Typography>\r\n            <Paper className={classes.paper}>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <LineChart data={regUserByMonth}>\r\n                  <Line name=\"單月新增註冊人數\" type=\"monotone\" dataKey=\"monthly_register_count\" stroke={colors20[14]} dot={false}/>\r\n                  <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                  <XAxis dataKey=\"date\" tickFormatter={(tickItem) => tickItem.substring(0, 7)}/>\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  {/* <Legend verticalAlign=\"top\" height={36}/> */}\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={4}>\r\n          <Grid item xs>\r\n            <Typography variant=\"h6\">\r\n              所有註冊使用者縣市/身分占比\r\n            </Typography>\r\n            <Paper className={classes.paper}>\r\n              <ResponsiveContainer width=\"100%\" height={600}>\r\n                <PieChart>\r\n                  <Pie data={regUserCategory} dataKey=\"count\" nameKey=\"user_role\" cx=\"50%\" cy=\"50%\" innerRadius={100} outerRadius={230} fill=\"#8884d8\" labelLine={false} label={renderInnerLabel? renderInnerLabel : false}>\r\n                    {\r\n                      regUserCategory.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={colors4[index]}/>\r\n                      ))\r\n                    }\r\n                    <Label value={\"註冊使用者：\" + regUserCategory.reduce((total, obj) => total + obj.count, 0).toLocaleString('en')} position=\"center\" />\r\n                  </Pie>\r\n                  <Pie data={lastWeekWAUByCity} dataKey=\"city_total_student_cnt\" nameKey=\"city\" cx=\"50%\" cy=\"50%\" innerRadius={230} outerRadius={280} fill=\"#82ca9d\" label={renderOuterLabel} labelLine={false}>\r\n                    {\r\n                      lastWeekWAUByCity.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={colors20[index]}/>\r\n                      ))\r\n                    } \r\n                  </Pie>\r\n                  <Tooltip />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </div>\r\n    );}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}