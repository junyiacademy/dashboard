{"version":3,"sources":["MapChart.tsx","App.tsx","serviceWorker.js","index.js"],"names":["memo","setTooltipContent","data-tip","projection","projectionConfig","rotate","scale","geography","geographies","map","geo","key","rsmKey","onMouseEnter","name","properties","student","regUserByCity","find","city","index","slice","toLocaleString","teacher","parent","others","onMouseLeave","style","default","fill","outline","hover","pressed","totalRegUserCnt","regUserCategory","reduce","total","obj","count","RADIAN","Math","PI","renderInnerLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","user_role","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","renderOuterLabel","entry","city_total_student_cnt","useStyles","makeStyles","theme","root","flexGrow","margin","marginLeft","paper","padding","spacing","maxWidth","colors4","colors20","App","useState","content","setContent","classes","className","Typography","variant","paragraph","color","WAUWeekByWeek","length","week","Grid","container","item","xs","Paper","width","height","data","lastWeekWAUByHour","type","dataKey","stroke","dot","strokeDasharray","vertical","lastWeekWAUByCity","tickFormatter","tickItem","substring","contentUsageByMonth","align","contentType","exercise","quiz","video","regUserByMonth","nameKey","labelLine","label","value","position","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ujeAuDeA,kBA5CE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,kBAClB,OACE,oCACE,kBAAC,gBAAD,CAAeC,WAAS,GAAGC,WAAW,wBAAwBC,iBAAkB,CAAEC,OAAQ,CAAC,KAAM,KAAM,GAAIC,MAAO,MAChH,kBAAC,cAAD,CAAaC,UAPN,8FAQJ,qBAAGC,YACUC,KAAI,SAAAC,GAAG,OACjB,kBAAC,YAAD,CACEC,IAAKD,EAAIE,OACTL,UAAWG,EACXG,aAAc,WAAO,IAAD,QACVC,EAASJ,EAAIK,WAAbD,KACFE,EAAO,UAAGC,EAAcC,MAAK,SAACC,GAAD,OAAUA,EAAKC,QAAUN,EAAKO,MAAM,EAAE,aAA5D,aAAG,EAA8DL,QAAQM,eAAe,MAC/FC,EAAO,UAAGN,EAAcC,MAAK,SAACC,GAAD,OAAUA,EAAKC,QAAUN,EAAKO,MAAM,EAAE,aAA5D,aAAG,EAA8DE,QAAQD,eAAe,MAC/FE,EAAM,UAAGP,EAAcC,MAAK,SAACC,GAAD,OAAUA,EAAKC,QAAUN,EAAKO,MAAM,EAAE,aAA5D,aAAG,EAA8DG,OAAOF,eAAe,MAC7FG,EAAM,UAAGR,EAAcC,MAAK,SAACC,GAAD,OAAUA,EAAKC,QAAUN,EAAKO,MAAM,EAAE,aAA5D,aAAG,EAA8DI,OAAOH,eAAe,MACnGrB,EAAkB,GAAD,OAAIa,EAAKO,MAAM,EAAE,GAAjB,0BAA2BL,EAA3B,0BAA0CO,EAA1C,0BAAyDC,EAAzD,0BAAuEC,KAE1FC,aAAc,WACZzB,EAAkB,KAEpB0B,MAAO,CACLC,QAAS,CACPC,KAAM,UACNC,QAAS,SAEXC,MAAO,CACLF,KAAM,OACNC,QAAS,QAEXE,QAAS,CACPH,KAAM,OACNC,QAAS,sB,oEC3BvBG,EAAkBC,EAAgBC,QAAO,SAACC,EAAeC,GAAhB,OAA6BD,EAAQC,EAAIC,QAAO,GACzFC,EAASC,KAAKC,GAAK,IACnBC,EAAmB,SAAC,GAA4E,IAA3EC,EAA0E,EAA1EA,GAAIC,EAAsE,EAAtEA,GAAIC,EAAkE,EAAlEA,SAAUC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,UACxEC,EAASJ,EAA4C,IAA7BC,EAAcD,GACtCK,EAAIR,EAAKO,EAASV,KAAKY,KAAKP,EAAWN,GAAU,GACjDc,EAAIT,EAAKM,EAASV,KAAKc,KAAKT,EAAWN,GAC7C,OACE,0BAAMY,EAAGA,EAAGE,EAAGA,EAAGxB,KAAK,QAAQ0B,WAAYJ,EAAIR,EAAK,QAAU,MAAOa,iBAAiB,WAAtF,UACMP,EADN,kBAC8B,IAAVD,GAAeS,QAAQ,GAD3C,OAKEC,EAAmB,SAACC,GAAD,OAAgBA,EAAMxC,KAAO,UAAsC,IAA/BwC,EAAMC,uBAA+B3B,GAAiBwB,QAAQ,GAAK,KAE1HI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,OAAQ,GACRC,WAAY,IAEdC,MAAO,CACLC,QAASN,EAAMO,QAAQ,GACvBJ,OAAQ,OACRK,SAAU,YAIRC,EAAU,CACd,UACA,UACA,UACA,WAGIC,EAAW,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAwOaC,MApOf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,KAEPC,EAAUjB,IAChB,OACE,yBAAKkB,UAAWD,EAAQd,MAEtB,kBAACgB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAW,GAApC,4EAIA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAW,EAAMC,MAAM,aAAhD,6BACSC,EAAcA,EAAcC,OAAO,GAAGC,KAD/C,KAIA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,GACvB,kBAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAApB,oFAGA,kBAACU,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAAC,IAAD,CAAqBwB,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAWC,KAAMC,GACf,kBAAC,IAAD,CAAMjF,KAAK,uCAASkF,KAAK,WAAWC,QAAQ,eAAeC,OAAQzB,EAAS,GAAI0B,KAAK,IACrF,kBAAC,IAAD,CAAeD,OAAO,OAAOE,gBAAgB,MAAMC,UAAU,IAC7D,kBAAC,IAAD,CAAOJ,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,UAMR,kBAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAApB,kGAGA,kBAACU,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAAC,IAAD,CAAqBwB,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAWC,KAAMC,GACf,kBAAC,IAAD,CAAMjF,KAAK,qDAAakF,KAAK,WAAWC,QAAQ,kBAAkBC,OAAQzB,EAAS,GAAI0B,KAAK,IAC5F,kBAAC,IAAD,CAAeD,OAAO,OAAOE,gBAAgB,MAAMC,UAAU,IAC7D,kBAAC,IAAD,CAAOJ,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,WAOV,kBAACV,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,GACvB,kBAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAApB,0DAGA,kBAACU,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAAC,IAAD,CAAqBwB,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAUC,KAAMQ,GACd,kBAAC,IAAD,CAAeJ,OAAO,OAAOE,gBAAgB,MAAMC,UAAU,IAC7D,kBAAC,IAAD,CAAOJ,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAKnF,KAAK,yDAAYmF,QAAQ,qBAAqBpE,KAAM4C,EAAS,UAO5E,uCACA,uCAEA,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAW,EAAOC,MAAM,aAAjD,uCACmBC,EAAcA,EAAcC,OAAO,GAAGC,KADzD,KAIA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,GACvB,kBAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAApB,0DAGA,kBAACU,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAAC,IAAD,CAAqBwB,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAWC,KAAMV,GACf,kBAAC,IAAD,CAAMtE,KAAK,iCAAQkF,KAAK,WAAWC,QAAQ,kBAAkBC,OAAQzB,EAAS,GAAI0B,KAAK,IACvF,kBAAC,IAAD,CAAeD,OAAO,OAAOE,gBAAgB,MAAMC,UAAU,IAC7D,kBAAC,IAAD,CAAOJ,QAAQ,OAAOM,cAAe,SAACC,GAAD,OAAcA,EAASC,UAAU,EAAG,MACzE,kBAAC,IAAD,MACA,kBAAC,IAAD,WAQV,kBAAClB,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,GACvB,kBAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAApB,oDAGA,kBAACU,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAAC,IAAD,CAAqBwB,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAWC,KAAMY,GACf,kBAAC,IAAD,CAAM5F,KAAK,uCAASkF,KAAK,WAAWC,QAAQ,YAAYC,OAAQzB,EAAS,IAAK0B,KAAK,IACnF,kBAAC,IAAD,CAAMrF,KAAK,uCAASkF,KAAK,WAAWC,QAAQ,eAAeC,OAAQzB,EAAS,IAAK0B,KAAK,IACtF,kBAAC,IAAD,CAAeD,OAAO,OAAOE,gBAAgB,MAAMC,UAAU,IAC7D,kBAAC,IAAD,CAAOJ,QAAQ,eACf,kBAAC,IAAD,MACA,kBAAC,IAAD,WAQV,kBAACV,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,GACvB,kBAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAApB,wFAGA,kBAACU,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAAC,EAAD,CAAUnE,kBAAmB4E,IAC7B,kBAAC,IAAD,KAAeD,KAInB,kBAACW,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAApB,wCAGA,kBAACM,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,GACvB,kBAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAACY,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAW,EAAMyB,MAAM,UAC7CC,EAAY,GAAGC,SAASvF,eAAe,OAE1C,kBAAC0D,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAW,EAAMyB,MAAM,UAAhD,qCAMN,kBAACpB,EAAA,EAAD,KACA,kBAACA,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,GACvB,kBAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAACY,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAW,EAAOyB,MAAM,UAC9CC,EAAY,GAAGE,KAAKxF,eAAe,OAEtC,kBAAC0D,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAW,EAAMyB,MAAM,UAAhD,qCAMN,kBAACpB,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,GACvB,kBAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAACY,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAW,EAAMyB,MAAM,UAC7CC,EAAY,GAAGG,MAAMzF,eAAe,OAEvC,kBAAC0D,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAW,EAAMyB,MAAM,UAAhD,kCAUV,kBAACpB,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,GACvB,kBAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAApB,oDAGA,kBAACU,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAAC,IAAD,CAAqBwB,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAWC,KAAMkB,GACf,kBAAC,IAAD,CAAMlG,KAAK,mDAAWkF,KAAK,WAAWC,QAAQ,yBAAyBC,OAAQzB,EAAS,IAAK0B,KAAK,IAClG,kBAAC,IAAD,CAAeD,OAAO,OAAOE,gBAAgB,MAAMC,UAAU,IAC7D,kBAAC,IAAD,CAAOJ,QAAQ,OAAOM,cAAe,SAACC,GAAD,OAAcA,EAASC,UAAU,EAAG,MACzE,kBAAC,IAAD,MACA,kBAAC,IAAD,WAQV,kBAAClB,EAAA,EAAD,CAAMC,WAAS,EAAClB,QAAS,GACvB,kBAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAApB,mFAGA,kBAACU,EAAA,EAAD,CAAOZ,UAAWD,EAAQV,OACxB,kBAAC,IAAD,CAAqBwB,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,KAAM5D,EAAiB+D,QAAQ,QAAQgB,QAAQ,YAAYtE,GAAG,MAAMC,GAAG,MAAME,YAAa,IAAKC,YAAa,IAAKlB,KAAK,UAAUqF,WAAW,EAAOC,MAAOzE,GAE1JR,EAAgBzB,KAAI,SAACkD,EAAOvC,GAAR,OAClB,kBAAC,IAAD,CAAMT,IAAG,eAAUS,GAASS,KAAM2C,EAAQpD,QAG9C,kBAAC,IAAD,CAAOgG,MAAO,uCAAWnF,EAAgBX,eAAe,MAAO+F,SAAS,YAE1E,kBAAC,IAAD,CAAKvB,KAAMQ,EAAmBL,QAAQ,yBAAyBgB,QAAQ,OAAOtE,GAAG,MAAMC,GAAG,MAAME,YAAa,IAAKC,YAAa,IAAKlB,KAAK,UAAUsF,MAAOzD,GAEtJ4C,EAAkB7F,KAAI,SAACkD,EAAOvC,GAAR,OACpB,kBAAC,IAAD,CAAMT,IAAG,eAAUS,GAASS,KAAM4C,EAASrD,SAIjD,kBAAC,IAAD,aCvRIkG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.4451c58c.chunk.js","sourcesContent":["import React, { memo } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\nimport regUserByCity from './reg_user_by_city.json';\r\n\r\nconst geoUrl = \"https://raw.githubusercontent.com/jason2506/Taiwan.TopoJSON/master/topojson/counties.json\";\r\n\r\n\r\nconst MapChart = ({ setTooltipContent }: any) => {\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip=\"\" projection=\"geoAzimuthalEqualArea\" projectionConfig={{ rotate: [239, -23.5, 0], scale: 8000 }}>\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                geography={geo}\r\n                onMouseEnter={() => {\r\n                  const { name } = geo.properties;\r\n                  const student = regUserByCity.find((city) => city.index === name.slice(0,2))?.student.toLocaleString('en');\r\n                  const teacher = regUserByCity.find((city) => city.index === name.slice(0,2))?.teacher.toLocaleString('en');\r\n                  const parent = regUserByCity.find((city) => city.index === name.slice(0,2))?.parent.toLocaleString('en');\r\n                  const others = regUserByCity.find((city) => city.index === name.slice(0,2))?.others.toLocaleString('en');\r\n                  setTooltipContent(`${name.slice(0,2)}: 學生 ${student}, 老師 ${teacher}, 家長 ${parent}, 其他 ${others}`);\r\n                }}\r\n                onMouseLeave={() => {\r\n                  setTooltipContent(\"\");\r\n                }}\r\n                style={{\r\n                  default: {\r\n                    fill: \"#3399FF\",\r\n                    outline: \"#none\"\r\n                  },\r\n                  hover: {\r\n                    fill: \"#F53\",\r\n                    outline: \"none\"\r\n                  },\r\n                  pressed: {\r\n                    fill: \"#E42\",\r\n                    outline: \"none\"\r\n                  }\r\n                }}\r\n              />\r\n            ))\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n","import React, { useState } from 'react';\r\nimport { Label, Cell, PieChart, Pie, BarChart, Bar, LineChart, Line, ResponsiveContainer, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MapChart from \"./MapChart\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport WAUWeekByWeek from './WAU_week_by_week.json';\r\nimport lastWeekWAUByCity from './last_week_WAU_by_city.json';\r\nimport regUserCategory from './reg_user_category.json';\r\nimport contentType from './content_type.json';\r\nimport lastWeekWAUByHour from './last_week_WAU_by_hour.json';\r\nimport contentUsageByMonth from './content_usage_by_month.json';\r\nimport regUserByMonth from './reg_user_by_month.json';\r\n\r\nconst totalRegUserCnt = regUserCategory.reduce((total: number, obj: any) => total + obj.count, 0);\r\nconst RADIAN = Math.PI / 180;\r\nconst renderInnerLabel = ({cx, cy, midAngle, innerRadius, outerRadius, percent, user_role,}: any) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN) - 15;\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n      {`${user_role}：${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\nconst renderOuterLabel = (entry: any) => entry.city + \"：\" + (entry.city_total_student_cnt * 100 / totalRegUserCnt).toFixed(2) + \"%\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 50,\r\n    marginLeft: 50,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: '100%',\r\n  },\r\n}));\r\n\r\nconst colors4 = [\r\n  '#004c6d',\r\n  '#0083a6',\r\n  '#00c0d8',\r\n  '#00ffff',\r\n];\r\n\r\nconst colors20 = [\r\n  '#ff7961',\r\n  '#ff6090',\r\n  '#d05ce3',\r\n  '#9a67ea',\r\n  '#757de8',\r\n  '#6ec6ff',\r\n  '#67daff',\r\n  '#62efff',\r\n  '#52c7b8',\r\n  '#80e27e',\r\n  '#bef67a',\r\n  '#629749',\r\n  '#b4a647',\r\n  '#ffb04c',\r\n  '#ff833a',\r\n  '#ff8a50',\r\n  '#a98274',\r\n  '#cfcfcf',\r\n  '#8eacbb',\r\n  '#484848',\r\n];\r\n\r\n\r\nfunction App() {\r\n  const [content, setContent] = useState(\"\");\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Typography variant=\"h4\" paragraph={true}>\r\n        均一教育平台網站公開數據\r\n      </Typography>\r\n\r\n      <Typography variant=\"h5\" paragraph={true} color=\"secondary\">\r\n        上週數據 ({WAUWeekByWeek[WAUWeekByWeek.length-1].week})\r\n      </Typography>\r\n\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h6\">\r\n            上週24小時各時段平均活躍人數\r\n          </Typography>\r\n          <Paper className={classes.paper}>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <LineChart data={lastWeekWAUByHour}>\r\n                <Line name=\"平均活躍人數\" type=\"monotone\" dataKey=\"avg_user_cnt\" stroke={colors20[0]} dot={true}/>\r\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                <XAxis dataKey=\"hour\"/>\r\n                <YAxis />\r\n                <Tooltip />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h6\">\r\n            上週24小時各時段平均使用時間(分鐘)\r\n          </Typography>\r\n          <Paper className={classes.paper}>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <LineChart data={lastWeekWAUByHour}>\r\n                <Line name=\"平均使用時間(分鐘)\" type=\"monotone\" dataKey=\"avg_time_minute\" stroke={colors20[2]} dot={true}/>\r\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                <XAxis dataKey=\"hour\"/>\r\n                <YAxis />\r\n                <Tooltip />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={4}>\r\n        <Grid item xs>\r\n          <Typography variant=\"h6\">\r\n            上週各縣市活躍人數\r\n          </Typography>\r\n          <Paper className={classes.paper}>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <BarChart data={lastWeekWAUByCity}>\r\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                <XAxis dataKey=\"city\"/>\r\n                <YAxis />\r\n                <Tooltip />\r\n                {/* <Legend verticalAlign=\"top\" height={36}/> */}\r\n                <Bar name=\"上週各縣市活躍人數\" dataKey=\"active_student_cnt\" fill={colors20[4]}/>\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div >&zwj;</div>\r\n      <div >&zwj;</div>\r\n\r\n      <Typography variant=\"h5\" paragraph={true}  color=\"secondary\">\r\n        長期數據 (2012-10 ~ {WAUWeekByWeek[WAUWeekByWeek.length-1].week})\r\n      </Typography>\r\n\r\n      <Grid container spacing={4}>\r\n        <Grid item xs>\r\n          <Typography variant=\"h6\">\r\n            每週活躍使用者人數\r\n          </Typography>\r\n          <Paper className={classes.paper}>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <LineChart data={WAUWeekByWeek}>\r\n                <Line name=\"週活躍人數\" type=\"monotone\" dataKey=\"unique_user_cnt\" stroke={colors20[8]} dot={false}/>\r\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                <XAxis dataKey=\"week\" tickFormatter={(tickItem) => tickItem.substring(0, 7)}/>\r\n                <YAxis />\r\n                <Tooltip />\r\n                {/* <Legend verticalAlign=\"top\" height={36}/> */}\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={4}>\r\n        <Grid item xs>\r\n          <Typography variant=\"h6\">\r\n            每月內容使用人次\r\n          </Typography>\r\n          <Paper className={classes.paper}>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <LineChart data={contentUsageByMonth}>\r\n                <Line name=\"影片使用人次\" type=\"monotone\" dataKey=\"video_cnt\" stroke={colors20[11]} dot={false}/>\r\n                <Line name=\"習題使用人次\" type=\"monotone\" dataKey=\"exercise_cnt\" stroke={colors20[12]} dot={false}/>\r\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                <XAxis dataKey=\"year_month\"/>\r\n                <YAxis />\r\n                <Tooltip />\r\n                {/* <Legend verticalAlign=\"top\" height={36}/> */}\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h6\">\r\n            各縣市不同身分註冊使用者統計\r\n          </Typography>\r\n          <Paper className={classes.paper}>\r\n            <MapChart setTooltipContent={setContent} />\r\n            <ReactTooltip>{content}</ReactTooltip>\r\n          </Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h6\">\r\n            網站內容統計\r\n          </Typography>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs>\r\n              <Paper className={classes.paper}>\r\n                <Typography variant=\"h4\" paragraph={true} align=\"center\">\r\n                  {contentType[0].exercise.toLocaleString('en')}\r\n                </Typography>\r\n                <Typography variant=\"h5\" paragraph={true} align=\"center\">\r\n                  知識點個數\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs>\r\n              <Paper className={classes.paper}>\r\n                <Typography variant=\"h4\" paragraph={true}  align=\"center\">\r\n                  {contentType[0].quiz.toLocaleString('en')}\r\n                </Typography>\r\n                <Typography variant=\"h5\" paragraph={true} align=\"center\">\r\n                  練習題總數\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs>\r\n              <Paper className={classes.paper}>\r\n                <Typography variant=\"h4\" paragraph={true} align=\"center\">\r\n                  {contentType[0].video.toLocaleString('en')}\r\n                </Typography>\r\n                <Typography variant=\"h5\" paragraph={true} align=\"center\">\r\n                  影片總數\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={4}>\r\n        <Grid item xs>\r\n          <Typography variant=\"h6\">\r\n            每月新增註冊人數\r\n          </Typography>\r\n          <Paper className={classes.paper}>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <LineChart data={regUserByMonth}>\r\n                <Line name=\"單月新增註冊人數\" type=\"monotone\" dataKey=\"monthly_register_count\" stroke={colors20[14]} dot={false}/>\r\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" vertical={false}/>\r\n                <XAxis dataKey=\"date\" tickFormatter={(tickItem) => tickItem.substring(0, 7)}/>\r\n                <YAxis />\r\n                <Tooltip />\r\n                {/* <Legend verticalAlign=\"top\" height={36}/> */}\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={4}>\r\n        <Grid item xs>\r\n          <Typography variant=\"h6\">\r\n            所有註冊使用者縣市/身分占比\r\n          </Typography>\r\n          <Paper className={classes.paper}>\r\n            <ResponsiveContainer width=\"100%\" height={600}>\r\n              <PieChart>\r\n                <Pie data={regUserCategory} dataKey=\"count\" nameKey=\"user_role\" cx=\"50%\" cy=\"50%\" innerRadius={100} outerRadius={230} fill=\"#8884d8\" labelLine={false} label={renderInnerLabel}>\r\n                  {\r\n                    regUserCategory.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={colors4[index]}/>\r\n                    ))\r\n                  }\r\n                  <Label value={\"註冊使用者：\" + totalRegUserCnt.toLocaleString('en')} position=\"center\" />\r\n                </Pie>\r\n                <Pie data={lastWeekWAUByCity} dataKey=\"city_total_student_cnt\" nameKey=\"city\" cx=\"50%\" cy=\"50%\" innerRadius={230} outerRadius={280} fill=\"#82ca9d\" label={renderOuterLabel}>\r\n                  {\r\n                    lastWeekWAUByCity.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={colors20[index]}/>\r\n                    ))\r\n                  } \r\n                </Pie>\r\n                <Tooltip />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}